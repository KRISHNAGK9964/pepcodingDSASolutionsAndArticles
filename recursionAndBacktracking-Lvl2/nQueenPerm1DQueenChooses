import java.io.*;
import java.util.*;

public class Main {

    public static boolean IsQueenSafe(int[][] chess, int row, int col) {
        // write your code here
        for (int r = 0; r < chess.length; r++) {
            if(chess[r][col] > 0)return false;
        }
        
        for (int c = 0; c < chess.length; c++) {
            if(chess[row][c] > 0)return false;
        }
        //normal diagonal bottom right
        for(int r = row , c = col ; r < chess.length && c < chess.length ; r++ , c++ ){
            if(chess[r][c] > 0)return false;
        }
        //normal diagonal upper left
        for(int r = row , c = col ; r >= 0 && c >= 0 ; r-- , c-- ){
            if(chess[r][c] > 0)return false;
        }
        //reverse diagonal upper right
        for(int r = row , c = col ; r >= 0 && c < chess.length ; r-- , c++){
            if(chess[r][c] > 0)return false;
        }
        //reverse diagonal bottom left
        for(int r= row , c = col ; r < chess.length && c >=0 ; r++ , c--){
            if(chess[r][c] > 0)return false;
        }

        return true;
    }

    public static void nqueens(int qpsf, int tq, int[][] chess) {
        // write your code here
        if(qpsf == tq){
            for (int i = 0; i < chess.length; i++) {
                for (int j = 0; j < chess.length; j++) {
                    if(chess[i][j] == 0 )System.out.print("-\t");
                    else System.out.print("q" + chess[i][j] + "\t");  
                }
                System.out.println();
            }
            System.out.println();
            return; 
        }
        for(int i = 0; i < chess.length; i++){
            for(int j = 0; j < chess.length; j++){
                if(chess[i][j] == 0 && IsQueenSafe(chess , i , j ) ){
                    chess[i][j] = qpsf + 1; 
                    nqueens(qpsf + 1 , tq , chess);
                    chess[i][j] = 0;
                }
            }
        }
    }

    public static void main(String[] args) throws Exception {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int n = Integer.parseInt(br.readLine());
        int[][] chess = new int[n][n];

        nqueens(0, n, chess);
    }
}