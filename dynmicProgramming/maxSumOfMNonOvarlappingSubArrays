import java.io.*;
import java.util.*;

public class Main {
	public static int helper(int[] arr , int idx , int m , int k , int[] ksum , int[][] dp){
		if( m == 0)return 0;
		if(idx >= arr.length)return 0;
		if(dp[idx][m] != 0)return dp[idx][m];
		int exclude = helper(arr , idx+1 , m , k , ksum , dp);
		int include = ksum[idx] + helper(arr , idx+k , m-1 , k , ksum , dp);

		return dp[idx][m] = Math.max(exclude , include);
	}
	public static int solution(int[] arr, int m, int k){
		// write your code here
		int [] ksum = new int[arr.length];
		int sum = 0 ;
		for (int i = arr.length-1; i >= 0; i--) {
			sum += arr[i];
			if(i+k < arr.length){
				sum -= arr[i+k];
				ksum[i] = sum;
			}
			else if(i+k == arr.length)ksum[i] = sum;
		}
		int [][] dp = new int[arr.length][m+1];
		return helper(arr , 0 , m , k , ksum , dp);
	}
	
	public static void main(String[] args) {
		Scanner scn = new Scanner(System.in);
		int n = scn.nextInt();
		int[] arr = new int[n];
		for(int i = 0 ; i < arr.length; i++){
			arr[i] = scn.nextInt();
		}
        int m = scn.nextInt();
        int k = scn.nextInt();
        System.out.println(solution(arr, m , k));
	}

}