import java.io.*;
import java.util.*;

public class Main {
    public static class Pair {
        int n;
        int s;
        Pair(){};
        Pair(int n , int s){
            this.n = n;
            this.s = s;
        }
    }
    public static void main(String[] args) throws Exception {
        // write your code here
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        Pair [] coordinates = new Pair[n];
        for (int i = 0; i < n; i++) {
            coordinates[i] = new Pair(sc.nextInt() , sc.nextInt());
        }

        Arrays.sort(coordinates , (a,b)-> (a.n == b.n)? (a.s-b.s): (a.n - b.n ));

        int [] dp = new int[n];
        int [] helper = new int[n];
        dp[0] = coordinates[0].s;
        // helper[0] = dp[0];
        // int idx = 0;
        // for (int i = 1; i < n; i++) {
        //     if(coordinates[i].s > helper[idx]){
        //         idx++;
        //         helper[idx] = coordinates[i].s;
        //         dp[i] = idx+1;
        //     }else{
        //         int pos = Arrays.binarySearch(helper ,0 , idx, coordinates[i].s);
        //         if(pos < 0){
        //             pos = (-pos)-1;
        //         }
        //         helper[pos] = coordinates[i].s;
        //         dp[i] = pos+1;
        //     }
        // }
        dp[0] = 1;
        int ans = 0;
        for (int i = 1; i < n; i++) {
            dp[i] = 1;
            for (int j = 0; j < i; j++) {
                if(coordinates[j].s <= coordinates[i].s){
                    if(dp[i] < dp[j]+1)dp[i] = dp[j]+1;
                }
            }
            if(dp[i] > ans)ans = dp[i];
        }
        // System.out.println(idx+1);
        // System.out.println(Arrays.toString(dp));
        System.out.println(ans);
    }


}