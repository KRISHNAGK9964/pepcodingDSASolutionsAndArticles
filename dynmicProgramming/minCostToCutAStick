import java.util.*;
import java.io.*;
public class Main {
    public static int helper(int[] cuts , int st , int ei ,int sn , int en , int [][] dp){
        
        if(st > ei){
            return 0;
        }
        else if(st == ei){
            return en-sn;
        }
        if(dp[st][ei] != 0)return dp[st][ei];
        int ans = Integer.MAX_VALUE;
        for (int i = st; i <= ei; i++) {
            int l = helper(cuts , st , i-1 , sn , cuts[i] , dp);
            int r = helper(cuts , i+1 , ei , cuts[i] , en , dp);
            ans = Math.min(ans , l+r);
        }
        ans += en - sn;
        return dp[st][ei] = ans;
    }
    public static int minCost(int n, int[] cuts) {
        // write your code here
        Arrays.sort(cuts);
        int[][] dp = new int[cuts.length][cuts.length];
        int ans = helper(cuts , 0 , cuts.length-1 , 0 , n , dp);
        return ans;
    }
   
    public static void main(String args[]) throws IOException{
        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
        String[] ip=br.readLine().split(" ");
        int n=Integer.parseInt(ip[0]);
        int m=Integer.parseInt(ip[1]);
        ip=br.readLine().split(" ");
        int[] cuts=new int[m];
        
        for(int i=0;i<m;i++){
            cuts[i]=Integer.parseInt(ip[i]);
        }
        int cost=minCost(n,cuts);
        System.out.println(cost);
    }
}