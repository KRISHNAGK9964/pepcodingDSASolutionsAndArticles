import java.io.*;
import java.util.*;

public class Main {
    public static void place(double [][]dp ,int i , int j, double k){
        if(i-2>=0 && j+1<dp.length)dp[i-2][j+1] += k/8;
        if(i-1>=0 && j+2<dp.length)dp[i-1][j+2] += k/8;
        if(i+1<dp.length && j+2<dp.length)dp[i+1][j+2] += k/8;
        if(i+2<dp.length && j+1<dp.length)dp[i+2][j+1] += k/8;
        if(i+2<dp.length && j-1>=0)dp[i+2][j-1] += k/8;
        if(i+1<dp.length && j-2>=0)dp[i+1][j-2] += k/8;
        if(i-1>=0 && j-2>=0)dp[i-1][j-2] += k/8;
        if(i-2>=0 && j-1>=0)dp[i-2][j-1] += k/8;
    }
	public static void solution(int r, int c, int n, int k) {
		//write your code here
		
        double [][] curr = new double[n][n];
        double [][] next = new double[n][n];

        curr[r][c] = 1.0;
        for (int m = 0; m < k; m++) {
            for (int i = 0; i < n; i++) {
                for (int j = 0; j < n; j++) {
                    if(curr[i][j] != 0){
                        place(next , i , j , curr[i][j]);
                    }
                }
            }
            // System.out.println(Arrays.deepToString(next));
            curr = next;
            next = new double[n][n];
        }

        double tot = 0 ;
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                tot += curr[i][j];
            }
        }
        System.out.println(tot);
	}

	public static void main(String[] args) {
		Scanner scn = new Scanner(System.in);
		int n = scn.nextInt();
		int k = scn.nextInt();
		int r = scn.nextInt();
		int c = scn.nextInt();
		solution(r, c, n, k);
	}

}